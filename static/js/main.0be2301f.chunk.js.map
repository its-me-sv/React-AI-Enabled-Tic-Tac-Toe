{"version":3,"sources":["Containers/Constants.js","Components/circle.js","Components/cross.js","Components/square.js","Components/result.js","Containers/bulb_on.png","Containers/bulb_off.png","Containers/App.js","Containers/helperFunctions.js","reportWebVitals.js","index.js"],"names":["EMPTY","HUMAN","COMPUTER","Circle","width","height","viewBox","className","cx","cy","r","Cross","x1","y1","x2","y2","Square","position","value","takeTurn","onClick","Result","winner","reset","initialState","player","positions","bulb","bulbSrc","bulb_off","App","useState","state","setState","p","lineFullOf","undefined","every","detectWinner","emptyPositionInLineFullOf","winningPosition","defendingPosition","randomPosition","Math","floor","random","calculateResponse","setTimeout","nineSquares","map","val","i","src","alt","background","document","getElementById","squareBackground","getElementsByClassName","style","backgroundColor","length","bulb_on","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.0be2301f.chunk.js","sourcesContent":["export const EMPTY = 'EMPTY';\r\nexport const CIRCLE = 'CIRCLE';\r\nexport const CROSS = 'CROSS';\r\nexport const TIE = 'TIE';\r\nexport const HUMAN = 'HUMAN';\r\nexport const COMPUTER = 'COMPUTER';","import React from 'react';\r\nimport '../index.css';\r\n\r\nfunction Circle() {\r\n\treturn (\r\n\t\t<svg width=\"100\" height=\"100\" viewBox=\"-50 -50 100 100\" className=\"circle\">\r\n\t\t\t<circle cx=\"0\" cy=\"0\" r=\"40\" />\r\n\t\t</svg>\r\n\t);\r\n}\r\n\r\nexport default Circle;","import React from 'react';\r\nimport '../index.css';\r\n\r\nfunction Cross(){\r\n  return (\r\n    <svg width=\"100\" height=\"100\" viewBox=\"-50 -50 100 100\" className=\"cross\">\r\n      <line x1=\"-40\" y1=\"-40\" x2=\"40\" y2=\"40\" />\r\n      <line x1=\"-40\" y1=\"40\" x2=\"40\" y2=\"-40\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default Cross;","import React from 'react';\r\nimport {EMPTY, HUMAN, COMPUTER} from '../Containers/Constants.js';\r\nimport Circle from './circle.js';\r\nimport Cross from './cross.js';\r\nimport '../index.css';\r\n\r\nfunction Square({position, value, takeTurn}) {\r\n\tfunction handleClick() {\r\n\t\tif (value === EMPTY)\r\n\t\t\ttakeTurn(position);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"square\" onClick={handleClick}>\r\n\t\t\t{value === COMPUTER && <Circle />}\r\n\t\t\t{value === HUMAN && <Cross />}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Square;","import React from 'react';\r\nimport '../index.css';\r\nimport {TIE, HUMAN, COMPUTER} from '../Containers/Constants.js';\r\n\r\nfunction Result({winner, reset}){\r\n  return (\r\n    <div className=\"result\">\r\n      {winner === COMPUTER && \"Computer Won The Game\"}\r\n      {winner === HUMAN && \"You Won The Game\"}\r\n      {winner === TIE && \"Game Tied\"}\r\n      <button onClick={reset}>Play Again</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Result;","export default __webpack_public_path__ + \"static/media/bulb_on.4f4f6af1.png\";","export default __webpack_public_path__ + \"static/media/bulb_off.5c404162.png\";","import '../index.css';\nimport React, {useState} from 'react';\nimport {EMPTY, HUMAN, COMPUTER} from './Constants.js';\nimport Square from '../Components/square.js';\nimport Result from '../Components/result.js';\nimport {detectWinner, calculateResponse} from './helperFunctions.js';\nimport bulb_on from './bulb_on.png';\nimport bulb_off from './bulb_off.png';\n\nconst initialState = {\n  player: HUMAN,\n  positions: [\n  EMPTY, EMPTY, EMPTY, \n  EMPTY, EMPTY, EMPTY,\n  EMPTY, EMPTY, EMPTY\n  ],\n  bulb: false,\n  bulbSrc: bulb_off\n};\n\nfunction App() {\n  const [state, setState] = useState(initialState);\n\n  const winner = detectWinner(state.positions);\n\n  // If the game is not yet finished and it's the computer's turn\n  if(winner === undefined && state.player === COMPUTER) {\n    // Calculate which position will the computer take\n    const position = calculateResponse(state.positions);\n    // Wait a few milliseconds before the computer goes, make it look like 'thinking'\n    setTimeout(() => takeTurn(position), 300)  \n  }\n\n  function takeTurn(position) {\n    const positions = [...state.positions];\n    positions[position] = state.player;\n\n    setState({...state, ...{\n      player: state.player === HUMAN ? COMPUTER : HUMAN,\n      positions\n    }});\n  }\n\n  function reset() {\n    setState(initialState);\n  }\n\n  function changeTheme() {\n    let bulb = state.bulb;\n    let bulbSrc;\n    let background = document.getElementById(\"root\");\n    let squareBackground = document.getElementsByClassName(\"square\");\n    \n    if (bulb === true){\n      background.style.backgroundColor = '#333333';\n      for (let i = 0; i < squareBackground.length; i += 1)\n        squareBackground[i].style.backgroundColor = '#333333';\n      bulbSrc = bulb_off;\n    } else {\n      background.style.backgroundColor = '#e6e6e6';\n      for (let i = 0; i < squareBackground.length; i += 1)\n        squareBackground[i].style.backgroundColor = '#e6e6e6';\n      bulbSrc = bulb_on;\n    }\n\n    bulb = !bulb;\n    setState({...state, ...{bulb, bulbSrc}});\n  }\n\n  let nineSquares = state.positions.map((val, i) => <Square position={i} value={state.positions[i]} takeTurn={takeTurn} />);\n\n  return (\n    <div>\n      <img src={state.bulbSrc} alt=\"\" onClick={changeTheme}></img>\n      <h1>Tic Tac Toe</h1>\n      <div className=\"grid\">\n        {nineSquares}\n      </div>\n      {winner !== undefined && (<Result winner={winner} reset={reset} />)}\n    </div>\n  );\n}\n\nexport default App;","import {EMPTY, TIE, COMPUTER, HUMAN} from './Constants.js';\r\n\r\nexport function detectWinner(p) {\r\n  function lineFullOf(player){\r\n    if(p[0] === player && p[1] === player && p[2] === player) return true; // First line is full\r\n    if(p[3] === player && p[4] === player && p[5] === player) return true; // Second line is full\r\n    if(p[6] === player && p[7] === player && p[8] === player) return true;\r\n\r\n    if(p[0] === player && p[3] === player && p[6] === player) return true; // First column is full\r\n    if(p[1] === player && p[4] === player && p[7] === player) return true;\r\n    if(p[2] === player && p[5] === player && p[8] === player) return true;\r\n\r\n    if(p[0] === player && p[4] === player && p[8] === player) return true;\r\n    if(p[2] === player && p[4] === player && p[6] === player) return true;\r\n  }\r\n\r\n  function gridIsFull() {\r\n    return p.every(position => position !== EMPTY);\r\n  }\r\n\r\n  const playerWon = lineFullOf(HUMAN);\r\n  if(playerWon !== undefined) \r\n    return HUMAN;\r\n  \r\n  const computerWon = lineFullOf(COMPUTER);\r\n  if(computerWon !== undefined) \r\n    return COMPUTER;\r\n  \r\n  const tie = gridIsFull();\r\n  if(tie) \r\n    return TIE;\r\n\r\n}\r\n\r\nexport function calculateResponse(p) { \r\n  \r\n  // This function gives back the first empty position (if any) that is in a line\r\n  // that is otherwise full of circles / crosses (depending on the parameter)\r\n  function emptyPositionInLineFullOf(player) {\r\n    if(p[0] === EMPTY && (                   // If the first position is empty,\r\n      (p[1] === player && p[2] === player) ||   // but otherwise the first row is full\r\n      (p[3] === player && p[6] === player) ||   // or the first column is full\r\n      (p[4] === player && p[8] === player)      // or the diagonal line starting from first position is full\r\n    )) return 0;                            // then return the first position\r\n                                            // because it's a good position to defend / attack\r\n    \r\n    if(p[1] === EMPTY && (                   // If the second position is empty\r\n      (p[0] === player && p[2] === player) ||   // but otherwise the first row is full\r\n      (p[4] === player && p[7] === player)      // or the second column is full\r\n    )) return 1;                            // then return the second position\r\n                                            // because it's a good position to defend / attack\r\n    \r\n    if(p[2] === EMPTY && (\r\n      (p[0] === player && p[1] === player) || \r\n      (p[5] === player && p[8] === player) || \r\n      (p[4] === player && p[6] === player)\r\n    )) return 2;\r\n\r\n    if(p[3] === EMPTY && (\r\n      (p[4] === player && p[5] === player) || \r\n      (p[0] === player && p[6] === player)\r\n    )) return 3;\r\n    \r\n    if(p[4] === EMPTY && (\r\n      (p[3] === player && p[5] === player) || \r\n      (p[1] === player && p[7] === player) || \r\n      (p[0] === player && p[8] === player) || \r\n      (p[2] === player && p[6] === player)\r\n    )) return 4;\r\n    \r\n    if(p[5] === EMPTY && (\r\n      (p[3] === player && p[4] === player) || \r\n      (p[2] === player && p[8] === player)\r\n    )) return 5;\r\n\r\n    if(p[6] === EMPTY && (\r\n      (p[7] === player && p[8] === player) || \r\n      (p[0] === player && p[3] === player) || \r\n      (p[4] === player && p[2] === player)\r\n    )) return 6;\r\n    \r\n    if(p[7] === EMPTY && (\r\n      (p[6] === player && p[8] === player) || \r\n      (p[1] === player && p[4] === player)\r\n    )) return 7;\r\n    \r\n    if(p[8] === EMPTY && (\r\n      (p[6] === player && p[7] === player) || \r\n      (p[2] === player && p[5] === player) || \r\n      (p[4] === player && p[0] === player)\r\n    )) return 8;  \r\n  }\r\n  \r\n  // If there's a position the computer can take and win then take it\r\n  const winningPosition = emptyPositionInLineFullOf(COMPUTER);\r\n  if(winningPosition !== undefined) \r\n    return winningPosition;\r\n  \r\n  // Otherwise if there's a position the human can take in next turn to win, then take it\r\n  const defendingPosition = emptyPositionInLineFullOf(HUMAN);\r\n  if(defendingPosition !== undefined) \r\n    return defendingPosition;\r\n  \r\n  // Otherwise pick random position that's empty\r\n  while(true) {\r\n    const randomPosition = Math.floor(Math.random()*9)\r\n    if(p[randomPosition] === EMPTY) \r\n      return randomPosition;\r\n  }\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Containers/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}